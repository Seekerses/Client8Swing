/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import client.ClientController;
import clientserverdata.Reply;
import cmd.Local;
import consolehandler.ClientInterpreter;
import consolehandler.Outputer;

import java.util.HashMap;
import java.util.Locale;

import javax.swing.*;

/**
 *
 * @author seeke
 */
public class Registration extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public Registration() {
        initComponents();
    }

    HashMap<String, Locale> localeMap;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        status = new javax.swing.JLabel();
        loocalPort = new javax.swing.JTextField();
        remotePort = new javax.swing.JTextField();
        password = new javax.swing.JPasswordField();
        login = new javax.swing.JTextField();
        loginText = new javax.swing.JLabel();
        passwordText = new javax.swing.JLabel();
        connect = new javax.swing.JButton();
        signIn = new javax.swing.JButton();
        signUp = new javax.swing.JButton();
        language = new javax.swing.JComboBox<>();

        jScrollPane1.setViewportView(jTextPane1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText(Outputer.getString("LocalPort"));

        jLabel2.setText(Outputer.getString("RemotePort"));

        status.setText(Outputer.getString("Status"));

        loocalPort.setText("");

        remotePort.setText("");

        login.setText("");

        loginText.setText(Outputer.getString("Login"));

        passwordText.setText(Outputer.getString("Password"));

        connect.setText(Outputer.getString("Connect"));
        connect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectActionPerformed(evt);
            }
        });

        signIn.setText(Outputer.getString("SignIn"));
        signIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signInActionPerformed(evt);
            }
        });

        signUp.setText(Outputer.getString("SignUp"));
        signUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signUpActionPerformed(evt);
            }
        });

        Locale localeRu = new Locale("ru");
        Locale localeEn = new Locale("en", "USA");
        Locale localeIt = new Locale("it");
        Locale localeTr = new Locale("tr");


        localeMap = new HashMap<>();
        localeMap.put("English", localeEn);
        localeMap.put("Русский", localeRu);
        localeMap.put("Turkish", localeTr);
        localeMap.put("Italy", localeIt);
        language.setModel(new DefaultComboBoxModel<String>(new String[] {"English", "Русский", "Turkish", "Italy"}));
        language.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                languageActionPerformed(evt);
            }
        });

        signIn.setEnabled(false);
        signUp.setEnabled(false);
        login.setEnabled(false);
        password.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(language, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31))
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(114, 114, 114)
                                                .addComponent(signIn)
                                                .addGap(43, 43, 43)
                                                .addComponent(signUp))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(22, 22, 22)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                                                        .addComponent(passwordText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(loginText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(remotePort, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(status))
                                                        .addComponent(connect)
                                                        .addComponent(loocalPort, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(login, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(181, 181, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(loocalPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel1))
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(language, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(35, 35, 35)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(remotePort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel2)
                                        .addComponent(status))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(connect)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(login, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(passwordText))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(loginText))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(signUp)
                                        .addComponent(signIn))
                                .addContainerGap(52, Short.MAX_VALUE))
        );
        pack();
    }// </editor-fold>

    private void connectActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            ClientController.setPort(Integer.parseInt(loocalPort.getText()));
            ClientController.setDestPort(Integer.parseInt(remotePort.getText()));
            if (ClientController.connect()) {
                status.setText(Outputer.getString("ConnectionStabled"));
                login.setEnabled(true);
                password.setEnabled(true);
                signUp.setEnabled(true);
                signIn.setEnabled(true);
            } else {
                status.setText(Outputer.getString("ConnectionFailed"));
                login.setEnabled(false);
                password.setEnabled(false);
                signUp.setEnabled(false);
                signIn.setEnabled(false);
            }
        }catch (Exception e){
            status.setText(Outputer.getString("WrongInput"));
        }
        status.setVisible(true);
    }

    private void signInActionPerformed(java.awt.event.ActionEvent evt) {
        ClientInterpreter interpreter = new ClientInterpreter();
        Reply result = interpreter.handle(new String[] {"login", login.getText(), password.getText()});
        if (result != null) if ("Approved".equals(result.getAnswer().split(",")[0])) {
            this.setVisible(false);
            MainWindow.main(null);
            this.dispose();
        }else status.setText(Outputer.getString("WrongInput"));
    }

    private void signUpActionPerformed(java.awt.event.ActionEvent evt) {
        ClientInterpreter interpreter = new ClientInterpreter();
        Reply result = interpreter.handle(new String[] {"register", login.getText(), password.getText()});
        if (result != null) if ("Approved".equals(result.getAnswer().split(",")[0])) {
            this.setVisible(false);
            MainWindow.main(null);
            this.dispose();
        }
        else status.setText(Outputer.getString("WrongInput"));
    }

    private void languageActionPerformed(java.awt.event.ActionEvent evt) {
            Outputer.setCurrent(localeMap.get(language.getSelectedItem() != null ? language.getSelectedItem().toString(): "English"));
            loginText.setText(Outputer.getString("Login"));
            passwordText.setText(Outputer.getString("Password"));
            jLabel1.setText(Outputer.getString("LocalPort"));
            jLabel2.setText(Outputer.getString("RemotePort"));
            status.setText(Outputer.getString("Status"));
            connect.setText(Outputer.getString("Connect"));
            signUp.setText(Outputer.getString("SignUp"));
            signIn.setText(Outputer.getString("SignIn"));
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Registration().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    private javax.swing.JButton connect;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JTextField login;
    private javax.swing.JLabel loginText;
    private javax.swing.JTextField loocalPort;
    private javax.swing.JPasswordField password;
    private javax.swing.JLabel passwordText;
    private javax.swing.JTextField remotePort;
    private javax.swing.JButton signIn;
    private javax.swing.JButton signUp;
    private javax.swing.JLabel status;
    private JComboBox<String> language;
    // End of variables declaration
}
